# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := opencv
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=opencv' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DDEBUG' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-I/usr/local/include/opencv \
	-I/usr/local/include \
	-Wall \
	-g \
	-O0

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug :=

INCS_Debug := \
	-I/home/odroid/.node-gyp/0.12.7/src \
	-I/home/odroid/.node-gyp/0.12.7/deps/uv/include \
	-I/home/odroid/.node-gyp/0.12.7/deps/v8/include \
	-I$(srcdir)/-I/usr/local/include/opencv \
	-I$(srcdir)/-I/usr/local/include \
	-I$(srcdir)/node_modules/nan

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=opencv' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DBUILDING_NODE_EXTENSION'

# Flags passed to all source files.
CFLAGS_Release := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-I/usr/local/include/opencv \
	-I/usr/local/include \
	-Wall \
	-O3 \
	-ffunction-sections \
	-fdata-sections \
	-fno-tree-vrp \
	-fno-omit-frame-pointer

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release :=

INCS_Release := \
	-I/home/odroid/.node-gyp/0.12.7/src \
	-I/home/odroid/.node-gyp/0.12.7/deps/uv/include \
	-I/home/odroid/.node-gyp/0.12.7/deps/v8/include \
	-I$(srcdir)/-I/usr/local/include/opencv \
	-I$(srcdir)/-I/usr/local/include \
	-I$(srcdir)/node_modules/nan

OBJS := \
	$(obj).target/$(TARGET)/src/init.o \
	$(obj).target/$(TARGET)/src/Matrix.o \
	$(obj).target/$(TARGET)/src/OpenCV.o \
	$(obj).target/$(TARGET)/src/CascadeClassifierWrap.o \
	$(obj).target/$(TARGET)/src/Contours.o \
	$(obj).target/$(TARGET)/src/Point.o \
	$(obj).target/$(TARGET)/src/VideoCaptureWrap.o \
	$(obj).target/$(TARGET)/src/CamShift.o \
	$(obj).target/$(TARGET)/src/HighGUI.o \
	$(obj).target/$(TARGET)/src/FaceRecognizer.o \
	$(obj).target/$(TARGET)/src/Features2d.o \
	$(obj).target/$(TARGET)/src/BackgroundSubtractor.o \
	$(obj).target/$(TARGET)/src/Constants.o \
	$(obj).target/$(TARGET)/src/Calib3D.o \
	$(obj).target/$(TARGET)/src/ImgProc.o \
	$(obj).target/$(TARGET)/src/Stereo.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-rdynamic

LDFLAGS_Release := \
	-pthread \
	-rdynamic

LIBS := \
	-L/usr/local/lib \
	-lopencv_contrib \
	-lopencv_stitching \
	-lopencv_nonfree \
	-lopencv_superres \
	-lopencv_ocl \
	-lopencv_ts \
	-lopencv_videostab \
	-lopencv_gpu \
	-lopencv_photo \
	-lopencv_objdetect \
	-lopencv_legacy \
	-lopencv_video \
	-lopencv_ml \
	-lopencv_calib3d \
	-lopencv_features2d \
	-lopencv_highgui \
	-lopencv_imgproc \
	-lopencv_flann \
	-lopencv_core \
	-lv4l2 \
	-lv4l1 \
	-ldc1394 \
	-lgstpbutils-0.10 \
	-lgstriff-0.10 \
	-lgstapp-0.10 \
	-lgstvideo-0.10 \
	-lxml2 \
	-lgmodule-2.0 \
	-lgstreamer-0.10 \
	-lgstbase-0.10 \
	-lgthread-2.0 \
	-lfreetype \
	-lfontconfig \
	-lglib-2.0 \
	-lgobject-2.0 \
	-lpango-1.0 \
	-lpangoft2-1.0 \
	-lgio-2.0 \
	-lgdk_pixbuf-2.0 \
	-lcairo \
	-latk-1.0 \
	-lpangocairo-1.0 \
	-lgdk-x11-2.0 \
	-lgtk-x11-2.0 \
	-lIlmThread \
	-lHalf \
	-lIex \
	-lIlmImf \
	-lImath \
	-ljasper \
	-ltiff \
	-lpng \
	-ljpeg \
	-ltbb \
	-lrt \
	-lpthread \
	-lm \
	-ldl \
	-lstdc++ \
	-lz

$(obj).target/opencv.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/opencv.node: LIBS := $(LIBS)
$(obj).target/opencv.node: TOOLSET := $(TOOLSET)
$(obj).target/opencv.node: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += $(obj).target/opencv.node
# Add target alias
.PHONY: opencv
opencv: $(builddir)/opencv.node

# Copy this to the executable output path.
$(builddir)/opencv.node: TOOLSET := $(TOOLSET)
$(builddir)/opencv.node: $(obj).target/opencv.node FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/opencv.node
# Short alias for building this executable.
.PHONY: opencv.node
opencv.node: $(obj).target/opencv.node $(builddir)/opencv.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/opencv.node

